@page "/register"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@using Baseline_LDS___FrontEnd.Components.API.Config;
@inject IJSRuntime JS
@if (errorMessage != null)
{
    <p class="text-danger">@errorMessage</p>
}

<div class="login-container">
    <h2>Registro</h2>
    <div id="loginForm">
        <div class="input-group">
            <label for="name">Nombre Completo</label>
            <input type="text" id="name" name="name" @bind="name" required>
        </div>
        <div class="input-group">
            <label for="username">Nombre de Usuario</label>
            <input type="text" id="username" name="username" @bind="username" required>
        </div>
        <div class="input-group">
            <label for="password">Contraseña</label>
            <input type="password" id="password" name="password" @bind="password" required>
        </div>
        <div class="input-group">
            <label for="password">Perfil</label>
            <select type="id_perfil" id="id_perfil" name="id_perfil" @bind="id_perfil" class="form-select" aria-label="Default select example">
                <option selected></option>
                <option  value="1">1</option>
            </select>
        </div>
        <button @onclick="Register">Registrarse</button>

    </div>
    <button @onclick="Login">Ingresar</button>
    <p id="errorMessage" class="error-message"></p>
</div>

@code {
    private Api apiUser = new Api();
    private string name;
    private string username;
    private string password;
    private string id_perfil;
    private string errorMessage;

    public async void Register()
    {
        var builder = WebApplication.CreateBuilder();
        responseModel response = await apiUser.Register(builder.Build().Configuration["Api"], username, password, name, id_perfil);

        Console.WriteLine(response);
        Console.WriteLine(username + "hola" + password);
        // Aquí puedes agregar la lógica para verificar las credenciales del usuario
        /*if (response.value.message == "ok")
        {
            // Si las credenciales son correctas, puedes redirigir a otra página

            Console.WriteLine(response.value.token);
            await JS.InvokeVoidAsync("localStorageInterop.setItem", "token", response.value.token);
            await JS.InvokeVoidAsync("localStorageInterop.setItem", "username", username);
            await JS.InvokeVoidAsync("localStorageInterop.setItem", "password", password);
            await JS.InvokeVoidAsync("localStorageInterop.setItem", "sesion", "1");
            NavigationManager.NavigateTo("/");
            errorMessage = null;
        }
        else
        {
            errorMessage = "Usuario o contraseña incorrectos";
        }*/
    }

    public void Login()
    {
        NavigationManager.NavigateTo("login");
    }
}
